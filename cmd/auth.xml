<policies>
    <inbound>
        <base />
        <cors>
            <allowed-origins>
                <origin>*</origin>
            </allowed-origins>
            <allowed-methods>
                <method>*</method>
            </allowed-methods>
            <allowed-headers>
                <header>*</header>
            </allowed-headers>
        </cors>
        <validate-jwt header-name="Authorization" failed-validation-httpcode="401" failed-validation-error-message="Unauthorized. Access token is missing or invalid.">
            <openid-config url="https://login.chinacloudapi.cn/common/.well-known/openid-configuration" />
        </validate-jwt>
        <set-variable name="token" value="" />
        <!-- New Variables for Authorization V2 -->
        <set-variable name="OperationId" value="@((string)context.Operation.Id)" />
        <!-- New URL for Authorization V2 -->
        <send-request mode="new" response-variable-name="ARSAPI" timeout="20" ignore-error="false">
            <set-url>https://AbiApiApmcn07Ce2Tst.azure-api.cn/arsagent/api/v2.0/rbac/authorize</set-url>
            <set-method>POST</set-method>
            <set-header name="Content-Type" exists-action="override">
                <value>application/json</value>
            </set-header>
            <set-header name="Accept" exists-action="override">
                <value>application/json</value>
            </set-header>
            <set-header name="Authorization" exists-action="override">
                <value></value>
            </set-header>
            <set-header name="Ocp-Apim-Subscription-Key" exists-action="override">
                <value></value>
            </set-header>
            <!-- New Request Body for Authorization V2 -->
            <set-body></set-body>
        </send-request>
        <choose>
            <!-- Not authorized. 401 is returned by ARS auth agent -->
            <when condition="">
            <return-response>
                <set-status code="401" reason="UnauthorizedByARS" />
            </return-response>
        </when>
        <when condition="@((((IResponse)context.Variables["ARSAPI"]).StatusCode) == 200)">
        <set-variable name="RBACBody" value="@{
                        var rbacresult = (string)((IResponse)context.Variables["ARSAPI"]).Body.As<string>();
                        return rbacresult.ToString();}" />
        <set-variable name="CorrelationId" value="@{
                        var correlationresult = (string)((IResponse)context.Variables["ARSAPI"]).Headers.GetValueOrDefault("ABB-ABILITY-CORRELATION-ID","");
        return correlationresult.ToString();}" />
    </when>
    <!-- Authorized. But got either 429/Request too large or 500/Internal Server Error or any other issue -->
    <when condition="@((((IResponse)context.Variables["ARSAPI"]).StatusCode) != 200)">
    <return-response>
        <set-status code="@(((IResponse)context.Variables["ARSAPI"]).StatusCode)" reason="@(((IResponse)context.Variables ["ARSAPI"]).Body.As<string>())" />
    </return-response>
</when>
        </choose>
<set-header name="RBACList" exists-action="override">
<value>@((string)context.Variables["RBACBody"])</value>
</set-header>
<set-header name="ABB-ABILITY-CORRELATION-ID" exists-action="override">
<value>@((string)context.Variables["CorrelationId"])</value>
</set-header>
        </inbound>
<backend>
<base />
</backend>
<outbound>
<base />
</outbound>
<on-error>
<base />
</on-error>
        </policies>